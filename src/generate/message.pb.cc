// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessage;
}  // namespace protobuf_message_2eproto
namespace im {
namespace tox {
namespace proto {
class QueryFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendReq>
      _instance;
} _QueryFriendReq_default_instance_;
class QueryFriendResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryFriendRes>
      _instance;
} _QueryFriendRes_default_instance_;
class OfflineMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessageReq>
      _instance;
} _OfflineMessageReq_default_instance_;
class OfflineMessageResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessageRes>
      _instance;
} _OfflineMessageRes_default_instance_;
class OfflineMessageReadNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessageReadNotice>
      _instance;
} _OfflineMessageReadNotice_default_instance_;
class OfflineMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessage>
      _instance;
} _OfflineMessage_default_instance_;
class OfflineMessagePullReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessagePullReq>
      _instance;
} _OfflineMessagePullReq_default_instance_;
class OfflineMessagePullResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessagePullRes>
      _instance;
} _OfflineMessagePullRes_default_instance_;
class OfflineMessageDelReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMessageDelReq>
      _instance;
} _OfflineMessageDelReq_default_instance_;
}  // namespace proto
}  // namespace tox
}  // namespace im
namespace protobuf_message_2eproto {
static void InitDefaultsQueryFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_QueryFriendReq_default_instance_;
    new (ptr) ::im::tox::proto::QueryFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::QueryFriendReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryFriendReq}, {}};

static void InitDefaultsQueryFriendRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_QueryFriendRes_default_instance_;
    new (ptr) ::im::tox::proto::QueryFriendRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::QueryFriendRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryFriendRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryFriendRes}, {}};

static void InitDefaultsOfflineMessageReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessageReq_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessageReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessageReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessageReq}, {}};

static void InitDefaultsOfflineMessageRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessageRes_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessageRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessageRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessageRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessageRes}, {}};

static void InitDefaultsOfflineMessageReadNotice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessageReadNotice_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessageReadNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessageReadNotice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessageReadNotice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessageReadNotice}, {}};

static void InitDefaultsOfflineMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessage_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessage}, {}};

static void InitDefaultsOfflineMessagePullReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessagePullReq_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessagePullReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessagePullReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessagePullReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessagePullReq}, {}};

static void InitDefaultsOfflineMessagePullRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessagePullRes_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessagePullRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessagePullRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OfflineMessagePullRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOfflineMessagePullRes}, {
      &protobuf_message_2eproto::scc_info_OfflineMessage.base,}};

static void InitDefaultsOfflineMessageDelReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::tox::proto::_OfflineMessageDelReq_default_instance_;
    new (ptr) ::im::tox::proto::OfflineMessageDelReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::tox::proto::OfflineMessageDelReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMessageDelReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMessageDelReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QueryFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryFriendRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessageReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessageRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessageReadNotice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessagePullReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessagePullRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMessageDelReq.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::QueryFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::QueryFriendReq, pk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::QueryFriendRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::QueryFriendRes, exist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::QueryFriendRes, pk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReq, local_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReq, to_pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReq, crypto_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageRes, local_msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReadNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageReadNotice, latest_msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, local_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, fr_pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, to_pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessage, create_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessagePullReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessagePullRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessagePullRes, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessagePullRes, left_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageDelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im::tox::proto::OfflineMessageDelReq, last_msg_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::im::tox::proto::QueryFriendReq)},
  { 6, -1, sizeof(::im::tox::proto::QueryFriendRes)},
  { 13, -1, sizeof(::im::tox::proto::OfflineMessageReq)},
  { 21, -1, sizeof(::im::tox::proto::OfflineMessageRes)},
  { 27, -1, sizeof(::im::tox::proto::OfflineMessageReadNotice)},
  { 33, -1, sizeof(::im::tox::proto::OfflineMessage)},
  { 44, -1, sizeof(::im::tox::proto::OfflineMessagePullReq)},
  { 49, -1, sizeof(::im::tox::proto::OfflineMessagePullRes)},
  { 56, -1, sizeof(::im::tox::proto::OfflineMessageDelReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_QueryFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_QueryFriendRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessageRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessageReadNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessagePullReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessagePullRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im::tox::proto::_OfflineMessageDelReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\014im.tox.proto\"\034\n\016QueryFr"
      "iendReq\022\n\n\002pk\030\001 \001(\014\"+\n\016QueryFriendRes\022\r\n"
      "\005exist\030\001 \001(\r\022\n\n\002pk\030\002 \001(\014\"P\n\021OfflineMessa"
      "geReq\022\024\n\014local_msg_id\030\001 \001(\003\022\r\n\005to_pk\030\002 \001"
      "(\014\022\026\n\016crypto_message\030\003 \001(\014\")\n\021OfflineMes"
      "sageRes\022\024\n\014local_msg_id\030\001 \001(\003\"1\n\030Offline"
      "MessageReadNotice\022\025\n\rlatest_msg_id\030\001 \001(\004"
      "\"z\n\016OfflineMessage\022\024\n\014local_msg_id\030\001 \001(\003"
      "\022\016\n\006msg_id\030\002 \001(\004\022\r\n\005fr_pk\030\003 \001(\014\022\r\n\005to_pk"
      "\030\004 \001(\014\022\017\n\007content\030\005 \001(\014\022\023\n\013create_time\030\006"
      " \001(\004\"\027\n\025OfflineMessagePullReq\"V\n\025Offline"
      "MessagePullRes\022)\n\003msg\030\001 \003(\0132\034.im.tox.pro"
      "to.OfflineMessage\022\022\n\nleft_count\030\002 \001(\r\"+\n"
      "\024OfflineMessageDelReq\022\023\n\013last_msg_id\030\002 \001"
      "(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 570);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace im {
namespace tox {
namespace proto {

// ===================================================================

void QueryFriendReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendReq::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendReq::QueryFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_QueryFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.QueryFriendReq)
}
QueryFriendReq::QueryFriendReq(const QueryFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pk().size() > 0) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.QueryFriendReq)
}

void QueryFriendReq::SharedCtor() {
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QueryFriendReq::~QueryFriendReq() {
  // @@protoc_insertion_point(destructor:im.tox.proto.QueryFriendReq)
  SharedDtor();
}

void QueryFriendReq::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryFriendReq::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryFriendReq& QueryFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_QueryFriendReq.base);
  return *internal_default_instance();
}


void QueryFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.QueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.QueryFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes pk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.QueryFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.QueryFriendReq)
  return false;
#undef DO_
}

void QueryFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.QueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pk = 1;
  if (this->pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.QueryFriendReq)
}

::google::protobuf::uint8* QueryFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.QueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pk = 1;
  if (this->pk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.QueryFriendReq)
  return target;
}

size_t QueryFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.QueryFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes pk = 1;
  if (this->pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.QueryFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.QueryFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.QueryFriendReq)
    MergeFrom(*source);
  }
}

void QueryFriendReq::MergeFrom(const QueryFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.QueryFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pk().size() > 0) {

    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
}

void QueryFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.QueryFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendReq::CopyFrom(const QueryFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.QueryFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendReq::IsInitialized() const {
  return true;
}

void QueryFriendReq::Swap(QueryFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendReq::InternalSwap(QueryFriendReq* other) {
  using std::swap;
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryFriendReq::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryFriendRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFriendRes::kExistFieldNumber;
const int QueryFriendRes::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFriendRes::QueryFriendRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_QueryFriendRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.QueryFriendRes)
}
QueryFriendRes::QueryFriendRes(const QueryFriendRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pk().size() > 0) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  exist_ = from.exist_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.QueryFriendRes)
}

void QueryFriendRes::SharedCtor() {
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exist_ = 0u;
}

QueryFriendRes::~QueryFriendRes() {
  // @@protoc_insertion_point(destructor:im.tox.proto.QueryFriendRes)
  SharedDtor();
}

void QueryFriendRes::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFriendRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryFriendRes::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryFriendRes& QueryFriendRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_QueryFriendRes.base);
  return *internal_default_instance();
}


void QueryFriendRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.QueryFriendRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exist_ = 0u;
  _internal_metadata_.Clear();
}

bool QueryFriendRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.QueryFriendRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 exist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.QueryFriendRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.QueryFriendRes)
  return false;
#undef DO_
}

void QueryFriendRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.QueryFriendRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exist = 1;
  if (this->exist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exist(), output);
  }

  // bytes pk = 2;
  if (this->pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.QueryFriendRes)
}

::google::protobuf::uint8* QueryFriendRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.QueryFriendRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exist = 1;
  if (this->exist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exist(), target);
  }

  // bytes pk = 2;
  if (this->pk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.QueryFriendRes)
  return target;
}

size_t QueryFriendRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.QueryFriendRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes pk = 2;
  if (this->pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pk());
  }

  // uint32 exist = 1;
  if (this->exist() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exist());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryFriendRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.QueryFriendRes)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFriendRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFriendRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.QueryFriendRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.QueryFriendRes)
    MergeFrom(*source);
  }
}

void QueryFriendRes::MergeFrom(const QueryFriendRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.QueryFriendRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pk().size() > 0) {

    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  if (from.exist() != 0) {
    set_exist(from.exist());
  }
}

void QueryFriendRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.QueryFriendRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFriendRes::CopyFrom(const QueryFriendRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.QueryFriendRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFriendRes::IsInitialized() const {
  return true;
}

void QueryFriendRes::Swap(QueryFriendRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFriendRes::InternalSwap(QueryFriendRes* other) {
  using std::swap;
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exist_, other->exist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryFriendRes::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessageReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessageReq::kLocalMsgIdFieldNumber;
const int OfflineMessageReq::kToPkFieldNumber;
const int OfflineMessageReq::kCryptoMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessageReq::OfflineMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessageReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessageReq)
}
OfflineMessageReq::OfflineMessageReq(const OfflineMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_pk().size() > 0) {
    to_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_pk_);
  }
  crypto_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crypto_message().size() > 0) {
    crypto_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_message_);
  }
  local_msg_id_ = from.local_msg_id_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessageReq)
}

void OfflineMessageReq::SharedCtor() {
  to_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_msg_id_ = GOOGLE_LONGLONG(0);
}

OfflineMessageReq::~OfflineMessageReq() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessageReq)
  SharedDtor();
}

void OfflineMessageReq::SharedDtor() {
  to_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineMessageReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessageReq::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessageReq& OfflineMessageReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessageReq.base);
  return *internal_default_instance();
}


void OfflineMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_msg_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OfflineMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessageReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 local_msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &local_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes crypto_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_crypto_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessageReq)
  return false;
#undef DO_
}

void OfflineMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->local_msg_id(), output);
  }

  // bytes to_pk = 2;
  if (this->to_pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_pk(), output);
  }

  // bytes crypto_message = 3;
  if (this->crypto_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->crypto_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessageReq)
}

::google::protobuf::uint8* OfflineMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->local_msg_id(), target);
  }

  // bytes to_pk = 2;
  if (this->to_pk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_pk(), target);
  }

  // bytes crypto_message = 3;
  if (this->crypto_message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->crypto_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessageReq)
  return target;
}

size_t OfflineMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes to_pk = 2;
  if (this->to_pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_pk());
  }

  // bytes crypto_message = 3;
  if (this->crypto_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->crypto_message());
  }

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->local_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessageReq)
    MergeFrom(*source);
  }
}

void OfflineMessageReq::MergeFrom(const OfflineMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to_pk().size() > 0) {

    to_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_pk_);
  }
  if (from.crypto_message().size() > 0) {

    crypto_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_message_);
  }
  if (from.local_msg_id() != 0) {
    set_local_msg_id(from.local_msg_id());
  }
}

void OfflineMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessageReq::CopyFrom(const OfflineMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessageReq::IsInitialized() const {
  return true;
}

void OfflineMessageReq::Swap(OfflineMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessageReq::InternalSwap(OfflineMessageReq* other) {
  using std::swap;
  to_pk_.Swap(&other->to_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crypto_message_.Swap(&other->crypto_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_msg_id_, other->local_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessageReq::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessageRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessageRes::kLocalMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessageRes::OfflineMessageRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessageRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessageRes)
}
OfflineMessageRes::OfflineMessageRes(const OfflineMessageRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_msg_id_ = from.local_msg_id_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessageRes)
}

void OfflineMessageRes::SharedCtor() {
  local_msg_id_ = GOOGLE_LONGLONG(0);
}

OfflineMessageRes::~OfflineMessageRes() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessageRes)
  SharedDtor();
}

void OfflineMessageRes::SharedDtor() {
}

void OfflineMessageRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessageRes::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessageRes& OfflineMessageRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessageRes.base);
  return *internal_default_instance();
}


void OfflineMessageRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessageRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_msg_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OfflineMessageRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessageRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 local_msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &local_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessageRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessageRes)
  return false;
#undef DO_
}

void OfflineMessageRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessageRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->local_msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessageRes)
}

::google::protobuf::uint8* OfflineMessageRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessageRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->local_msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessageRes)
  return target;
}

size_t OfflineMessageRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessageRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->local_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessageRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessageRes)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessageRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessageRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessageRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessageRes)
    MergeFrom(*source);
  }
}

void OfflineMessageRes::MergeFrom(const OfflineMessageRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessageRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_msg_id() != 0) {
    set_local_msg_id(from.local_msg_id());
  }
}

void OfflineMessageRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessageRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessageRes::CopyFrom(const OfflineMessageRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessageRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessageRes::IsInitialized() const {
  return true;
}

void OfflineMessageRes::Swap(OfflineMessageRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessageRes::InternalSwap(OfflineMessageRes* other) {
  using std::swap;
  swap(local_msg_id_, other->local_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessageRes::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessageReadNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessageReadNotice::kLatestMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessageReadNotice::OfflineMessageReadNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessageReadNotice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessageReadNotice)
}
OfflineMessageReadNotice::OfflineMessageReadNotice(const OfflineMessageReadNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latest_msg_id_ = from.latest_msg_id_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessageReadNotice)
}

void OfflineMessageReadNotice::SharedCtor() {
  latest_msg_id_ = GOOGLE_ULONGLONG(0);
}

OfflineMessageReadNotice::~OfflineMessageReadNotice() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessageReadNotice)
  SharedDtor();
}

void OfflineMessageReadNotice::SharedDtor() {
}

void OfflineMessageReadNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessageReadNotice::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessageReadNotice& OfflineMessageReadNotice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessageReadNotice.base);
  return *internal_default_instance();
}


void OfflineMessageReadNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessageReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latest_msg_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OfflineMessageReadNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessageReadNotice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 latest_msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &latest_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessageReadNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessageReadNotice)
  return false;
#undef DO_
}

void OfflineMessageReadNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessageReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latest_msg_id = 1;
  if (this->latest_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->latest_msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessageReadNotice)
}

::google::protobuf::uint8* OfflineMessageReadNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessageReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latest_msg_id = 1;
  if (this->latest_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->latest_msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessageReadNotice)
  return target;
}

size_t OfflineMessageReadNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessageReadNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 latest_msg_id = 1;
  if (this->latest_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->latest_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessageReadNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessageReadNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessageReadNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessageReadNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessageReadNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessageReadNotice)
    MergeFrom(*source);
  }
}

void OfflineMessageReadNotice::MergeFrom(const OfflineMessageReadNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessageReadNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latest_msg_id() != 0) {
    set_latest_msg_id(from.latest_msg_id());
  }
}

void OfflineMessageReadNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessageReadNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessageReadNotice::CopyFrom(const OfflineMessageReadNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessageReadNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessageReadNotice::IsInitialized() const {
  return true;
}

void OfflineMessageReadNotice::Swap(OfflineMessageReadNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessageReadNotice::InternalSwap(OfflineMessageReadNotice* other) {
  using std::swap;
  swap(latest_msg_id_, other->latest_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessageReadNotice::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessage::kLocalMsgIdFieldNumber;
const int OfflineMessage::kMsgIdFieldNumber;
const int OfflineMessage::kFrPkFieldNumber;
const int OfflineMessage::kToPkFieldNumber;
const int OfflineMessage::kContentFieldNumber;
const int OfflineMessage::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessage::OfflineMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessage)
}
OfflineMessage::OfflineMessage(const OfflineMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fr_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fr_pk().size() > 0) {
    fr_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fr_pk_);
  }
  to_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_pk().size() > 0) {
    to_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_pk_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&local_msg_id_, &from.local_msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_time_) -
    reinterpret_cast<char*>(&local_msg_id_)) + sizeof(create_time_));
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessage)
}

void OfflineMessage::SharedCtor() {
  fr_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_time_) -
      reinterpret_cast<char*>(&local_msg_id_)) + sizeof(create_time_));
}

OfflineMessage::~OfflineMessage() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessage)
  SharedDtor();
}

void OfflineMessage::SharedDtor() {
  fr_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessage& OfflineMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessage.base);
  return *internal_default_instance();
}


void OfflineMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fr_pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_time_) -
      reinterpret_cast<char*>(&local_msg_id_)) + sizeof(create_time_));
  _internal_metadata_.Clear();
}

bool OfflineMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 local_msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &local_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes fr_pk = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fr_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_pk = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 create_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessage)
  return false;
#undef DO_
}

void OfflineMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->local_msg_id(), output);
  }

  // uint64 msg_id = 2;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msg_id(), output);
  }

  // bytes fr_pk = 3;
  if (this->fr_pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->fr_pk(), output);
  }

  // bytes to_pk = 4;
  if (this->to_pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->to_pk(), output);
  }

  // bytes content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->content(), output);
  }

  // uint64 create_time = 6;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->create_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessage)
}

::google::protobuf::uint8* OfflineMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->local_msg_id(), target);
  }

  // uint64 msg_id = 2;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msg_id(), target);
  }

  // bytes fr_pk = 3;
  if (this->fr_pk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->fr_pk(), target);
  }

  // bytes to_pk = 4;
  if (this->to_pk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->to_pk(), target);
  }

  // bytes content = 5;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->content(), target);
  }

  // uint64 create_time = 6;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->create_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessage)
  return target;
}

size_t OfflineMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes fr_pk = 3;
  if (this->fr_pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fr_pk());
  }

  // bytes to_pk = 4;
  if (this->to_pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_pk());
  }

  // bytes content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // int64 local_msg_id = 1;
  if (this->local_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->local_msg_id());
  }

  // uint64 msg_id = 2;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());
  }

  // uint64 create_time = 6;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessage)
    MergeFrom(*source);
  }
}

void OfflineMessage::MergeFrom(const OfflineMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fr_pk().size() > 0) {

    fr_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fr_pk_);
  }
  if (from.to_pk().size() > 0) {

    to_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_pk_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.local_msg_id() != 0) {
    set_local_msg_id(from.local_msg_id());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
}

void OfflineMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessage::CopyFrom(const OfflineMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessage::IsInitialized() const {
  return true;
}

void OfflineMessage::Swap(OfflineMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessage::InternalSwap(OfflineMessage* other) {
  using std::swap;
  fr_pk_.Swap(&other->fr_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_pk_.Swap(&other->to_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_msg_id_, other->local_msg_id_);
  swap(msg_id_, other->msg_id_);
  swap(create_time_, other->create_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessagePullReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessagePullReq::OfflineMessagePullReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessagePullReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessagePullReq)
}
OfflineMessagePullReq::OfflineMessagePullReq(const OfflineMessagePullReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessagePullReq)
}

void OfflineMessagePullReq::SharedCtor() {
}

OfflineMessagePullReq::~OfflineMessagePullReq() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessagePullReq)
  SharedDtor();
}

void OfflineMessagePullReq::SharedDtor() {
}

void OfflineMessagePullReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessagePullReq::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessagePullReq& OfflineMessagePullReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessagePullReq.base);
  return *internal_default_instance();
}


void OfflineMessagePullReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessagePullReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OfflineMessagePullReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessagePullReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessagePullReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessagePullReq)
  return false;
#undef DO_
}

void OfflineMessagePullReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessagePullReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessagePullReq)
}

::google::protobuf::uint8* OfflineMessagePullReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessagePullReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessagePullReq)
  return target;
}

size_t OfflineMessagePullReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessagePullReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessagePullReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessagePullReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessagePullReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessagePullReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessagePullReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessagePullReq)
    MergeFrom(*source);
  }
}

void OfflineMessagePullReq::MergeFrom(const OfflineMessagePullReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessagePullReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OfflineMessagePullReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessagePullReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessagePullReq::CopyFrom(const OfflineMessagePullReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessagePullReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessagePullReq::IsInitialized() const {
  return true;
}

void OfflineMessagePullReq::Swap(OfflineMessagePullReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessagePullReq::InternalSwap(OfflineMessagePullReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessagePullReq::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessagePullRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessagePullRes::kMsgFieldNumber;
const int OfflineMessagePullRes::kLeftCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessagePullRes::OfflineMessagePullRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessagePullRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessagePullRes)
}
OfflineMessagePullRes::OfflineMessagePullRes(const OfflineMessagePullRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_(from.msg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  left_count_ = from.left_count_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessagePullRes)
}

void OfflineMessagePullRes::SharedCtor() {
  left_count_ = 0u;
}

OfflineMessagePullRes::~OfflineMessagePullRes() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessagePullRes)
  SharedDtor();
}

void OfflineMessagePullRes::SharedDtor() {
}

void OfflineMessagePullRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessagePullRes::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessagePullRes& OfflineMessagePullRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessagePullRes.base);
  return *internal_default_instance();
}


void OfflineMessagePullRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessagePullRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  left_count_ = 0u;
  _internal_metadata_.Clear();
}

bool OfflineMessagePullRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessagePullRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .im.tox.proto.OfflineMessage msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 left_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessagePullRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessagePullRes)
  return false;
#undef DO_
}

void OfflineMessagePullRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessagePullRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im.tox.proto.OfflineMessage msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->msg(static_cast<int>(i)),
      output);
  }

  // uint32 left_count = 2;
  if (this->left_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->left_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessagePullRes)
}

::google::protobuf::uint8* OfflineMessagePullRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessagePullRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im.tox.proto.OfflineMessage msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->msg(static_cast<int>(i)), deterministic, target);
  }

  // uint32 left_count = 2;
  if (this->left_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->left_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessagePullRes)
  return target;
}

size_t OfflineMessagePullRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessagePullRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .im.tox.proto.OfflineMessage msg = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg(static_cast<int>(i)));
    }
  }

  // uint32 left_count = 2;
  if (this->left_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->left_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessagePullRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessagePullRes)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessagePullRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessagePullRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessagePullRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessagePullRes)
    MergeFrom(*source);
  }
}

void OfflineMessagePullRes::MergeFrom(const OfflineMessagePullRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessagePullRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
  if (from.left_count() != 0) {
    set_left_count(from.left_count());
  }
}

void OfflineMessagePullRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessagePullRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessagePullRes::CopyFrom(const OfflineMessagePullRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessagePullRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessagePullRes::IsInitialized() const {
  return true;
}

void OfflineMessagePullRes::Swap(OfflineMessagePullRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessagePullRes::InternalSwap(OfflineMessagePullRes* other) {
  using std::swap;
  CastToBase(&msg_)->InternalSwap(CastToBase(&other->msg_));
  swap(left_count_, other->left_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessagePullRes::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMessageDelReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMessageDelReq::kLastMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMessageDelReq::OfflineMessageDelReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OfflineMessageDelReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.tox.proto.OfflineMessageDelReq)
}
OfflineMessageDelReq::OfflineMessageDelReq(const OfflineMessageDelReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_msg_id_ = from.last_msg_id_;
  // @@protoc_insertion_point(copy_constructor:im.tox.proto.OfflineMessageDelReq)
}

void OfflineMessageDelReq::SharedCtor() {
  last_msg_id_ = GOOGLE_ULONGLONG(0);
}

OfflineMessageDelReq::~OfflineMessageDelReq() {
  // @@protoc_insertion_point(destructor:im.tox.proto.OfflineMessageDelReq)
  SharedDtor();
}

void OfflineMessageDelReq::SharedDtor() {
}

void OfflineMessageDelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMessageDelReq::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMessageDelReq& OfflineMessageDelReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OfflineMessageDelReq.base);
  return *internal_default_instance();
}


void OfflineMessageDelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im.tox.proto.OfflineMessageDelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_msg_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OfflineMessageDelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.tox.proto.OfflineMessageDelReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 last_msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.tox.proto.OfflineMessageDelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.tox.proto.OfflineMessageDelReq)
  return false;
#undef DO_
}

void OfflineMessageDelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.tox.proto.OfflineMessageDelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 last_msg_id = 2;
  if (this->last_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->last_msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im.tox.proto.OfflineMessageDelReq)
}

::google::protobuf::uint8* OfflineMessageDelReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im.tox.proto.OfflineMessageDelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 last_msg_id = 2;
  if (this->last_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->last_msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.tox.proto.OfflineMessageDelReq)
  return target;
}

size_t OfflineMessageDelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.tox.proto.OfflineMessageDelReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 last_msg_id = 2;
  if (this->last_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMessageDelReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.tox.proto.OfflineMessageDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMessageDelReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMessageDelReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.tox.proto.OfflineMessageDelReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.tox.proto.OfflineMessageDelReq)
    MergeFrom(*source);
  }
}

void OfflineMessageDelReq::MergeFrom(const OfflineMessageDelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.tox.proto.OfflineMessageDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_msg_id() != 0) {
    set_last_msg_id(from.last_msg_id());
  }
}

void OfflineMessageDelReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.tox.proto.OfflineMessageDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMessageDelReq::CopyFrom(const OfflineMessageDelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.tox.proto.OfflineMessageDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessageDelReq::IsInitialized() const {
  return true;
}

void OfflineMessageDelReq::Swap(OfflineMessageDelReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMessageDelReq::InternalSwap(OfflineMessageDelReq* other) {
  using std::swap;
  swap(last_msg_id_, other->last_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMessageDelReq::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace tox
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::QueryFriendReq* Arena::CreateMaybeMessage< ::im::tox::proto::QueryFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::QueryFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::QueryFriendRes* Arena::CreateMaybeMessage< ::im::tox::proto::QueryFriendRes >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::QueryFriendRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessageReq* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessageReq >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessageReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessageRes* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessageRes >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessageRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessageReadNotice* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessageReadNotice >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessageReadNotice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessage* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessage >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessagePullReq* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessagePullReq >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessagePullReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessagePullRes* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessagePullRes >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessagePullRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::tox::proto::OfflineMessageDelReq* Arena::CreateMaybeMessage< ::im::tox::proto::OfflineMessageDelReq >(Arena* arena) {
  return Arena::CreateInternal< ::im::tox::proto::OfflineMessageDelReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
